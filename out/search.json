[
  {
    "objectID": "LICENCE.html",
    "href": "LICENCE.html",
    "title": "",
    "section": "",
    "text": "=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More considerations\n for the public: \nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org."
  },
  {
    "objectID": "analysis.html",
    "href": "analysis.html",
    "title": "Global education",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(here)\n})\nlibrary(pins)\nlibrary(sf)\n\n\nLinking to GEOS 3.9.1, GDAL 3.2.3, PROJ 7.2.1\n\n\nCode\nlibrary(CoordinateCleaner)\nlibrary(countrycode)\nlibrary(igraph)\n\n\n\nAttaching package: 'igraph'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\n\nThe following object is masked from 'package:base':\n\n    union\n\n\nCode\nlibrary(wbstats)\nlibrary(themes360info)\n\n\n✔ Using preferred font, ITC Franklin Gothic.\nℹ Specify a different font to use with 360info themes by calling\n  register_360fonts() or by setting options(\"themes360info.franklin.pref\") to\n  either \"itc\" or \"libre\" (or \"none\" to disable automatic font loading).\n\n\nCode\nregister_360fonts(\"libre\")\n\n\n✔ Using preferred font, Libre Franklin.\nℹ Specify a different font to use with 360info themes by calling\n  register_360fonts() or by setting options(\"themes360info.franklin.pref\") to\n  either \"itc\" or \"libre\" (or \"none\" to disable automatic font loading).\n\n\nNULL"
  },
  {
    "objectID": "analysis.html#getting-the-data",
    "href": "analysis.html#getting-the-data",
    "title": "Global education",
    "section": "Getting the data",
    "text": "Getting the data\nThis data comes from the UNESCO Institute for Statistics (UIS).\nWe’ll use their Bulk Data Download Service to acquire the data quickly, but we’re particularly interested in the indicators within the Education theme labelled Number and rates of international mobile students (inbound and outbound).\n\n\nCode\ndata_cache <- here(\"data\", \".cache\")\ndir.create(data_cache, showWarnings = FALSE)\n\n# download the zip file (keeping it cached if we redo this)\nzipped_data <-\n  board_url(\n    c(opri = paste0(\n      \"https://apimgmtstzgjpfeq2u763lag.blob.core.windows.net/\",\n      \"content/MediaLibrary/bdds/OPRI.zip\")),\n    cache = data_cache) %>%\n  pin_download(\"opri\")\n\n# unzip it \nunzip(zipped_data, exdir = data_cache)\n\n# read the coding sheets in\ncountry_map <- read_csv(file.path(data_cache, \"OPRI_COUNTRY.csv\"), col_types = \"cc\")\nindicator_map <- read_csv(\n  file.path(data_cache, \"OPRI_LABEL.csv\"),\n  col_types = \"cc\")\nregion_map <- read_csv(file.path(data_cache, \"OPRI_REGION.csv\"), col_types = \"ccc\")\n\n# read the data in\nnational_data <- read_csv(\n  file.path(data_cache, \"OPRI_DATA_NATIONAL.csv\"),\n  col_types = \"ccincc\")"
  },
  {
    "objectID": "analysis.html#tidying-and-joining-the-origin-data",
    "href": "analysis.html#tidying-and-joining-the-origin-data",
    "title": "Global education",
    "section": "Tidying and joining the origin data",
    "text": "Tidying and joining the origin data\nThis data is two dimensional, in a way: there’s the country students go from (that is, the origin) and the country that go to (the destination). The way the data is organised into indicators by origin (\"[continent]: \"Students from\" [country], both sexes (number)\"), and within that indicator there’s a row for each destination, each year.\nSo you can easily look up where a country’s students have gone. If you want to look up where a country’s students have come from, though, you would need to tally up the destination row for a country in every origin indicator. That’s what we’re going to do (with the implicit assumption that there are no countries missing).\n\nMap preparation\nThe national data already has a destination column. It also has an indicator number column, and we need to map that back to a country code using the label map and the country map.\n\n\nCode\n# first, isolate the continent and country of origin\nindicator_map %>%\n  filter(str_detect(INDICATOR_LABEL_EN, \"Students from\")) %>%\n  mutate(\n    INDICATOR_LABEL_EN = str_replace(INDICATOR_LABEL_EN,\n      fixed(\", both sexes (number)\"), \"\"),\n    INDICATOR_LABEL_EN = str_replace(INDICATOR_LABEL_EN,\n      fixed(\" Students from \"), \"\")) %>%\n  separate(INDICATOR_LABEL_EN, into = c(\"continent\", \"country\"), sep = \":\") %>%\n  # some indicators also preface country name with \"the \"\n  mutate(country = str_replace(country, \"^the \", \"\")) ->\ntidy_origins\n\n# now match these to the country map\ntidy_origins %>%\n  left_join(country_map, by = c(\"country\" = \"COUNTRY_NAME_EN\")) %>%\n  # we'll use {countrycode} as a backup for the un country list,\n  # since they aren't always entirely consistent\n  mutate(\n    countrycode_backup = countrycode(country,\n      origin = \"country.name\", destination = \"iso3c\"),\n    code = coalesce(COUNTRY_ID, countrycode_backup)) %>%\n  select(INDICATOR_ID,\n    continent,\n    country_name = country,\n    country_code = code) %>%\n  # finally, let's neaten a few country names up\n  # mutate(l = nchar(country_name)) %>% arrange(desc(l)) %>%\n  # select(country_name, country_code, l)\n  mutate(\n    country_name = case_when(\n      country_code == \"HKG\" ~ \"Hong Kong\",\n      country_code == \"MAC\" ~ \"Macao\",\n      country_code == \"PRK\" ~ \"North Korea\",\n      country_code == \"COD\" ~ \"DR Congo\",\n      country_code == \"VCT\" ~ \"St Vincent/Grenadines\",\n      country_code == \"VEN\" ~ \"Venezuala\",\n      country_code == \"LAO\" ~ \"Laos\",\n      country_code == \"BOL\" ~ \"Bolivia\",\n      country_code == \"FSM\" ~ \"Micronesia\",\n      country_code == \"TZA\" ~ \"Tanzania\",\n      country_code == \"IRN\" ~ \"Iran\",\n      country_code == \"RUS\" ~ \"Russia\",\n      country_code == \"MDA\" ~ \"Moldova\",\n      country_code == \"SYR\" ~ \"Syria\",\n      TRUE ~ country_name)) %>%\n  write_csv(here(\"data\", \"country-names.csv\")) ->\nindicator_origin_map\n\n\nWarning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: Netherlands Antilles, Sudan (pre-secession), unknown countries\n\n\nNote that we still have a few unmapped country codes: those cases where the origin continent is known but not the country:\n\n\nCode\nindicator_origin_map %>%\n  filter(is.na(country_code)) %>%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\nINDICATOR_ID\ncontinent\ncountry_name\ncountry_code\n\n\n\n\n26474\nAfrica\nunknown countries\nNA\n\n\n26504\nNorth America\nunknown countries\nNA\n\n\n26518\nSouth America\nunknown countries\nNA\n\n\n26570\nAsia\nunknown countries\nNA\n\n\n26615\nEurope\nunknown countries\nNA\n\n\n26630\nOceania\nunknown countries\nNA\n\n\n26651\nCaribbean and Central America\nunknown countries\nNA\n\n\n\n\n\nThat’s okay!\n\n\nJoining the flow data\nNow we’re ready to map these codes back onto the national data:\n\n\nCode\nnational_data %>%\n  select(INDICATOR_ID, dest_country_code = COUNTRY_ID, year = YEAR,\n    value = VALUE, magnitude = MAGNITUDE, qualifier = QUALIFIER) %>%\n  # join the origin map in\n  filter(INDICATOR_ID %in% indicator_origin_map$INDICATOR_ID) %>%\n  left_join(indicator_origin_map, by = \"INDICATOR_ID\") %>%\n  rename(origin_continent = continent, origin_country_name = country_name,\n    origin_country_code = country_code) %>%\n  # now we're going to join it _again_, but this time to get  the _destination_\n  # name and continent\n  left_join(indicator_origin_map,\n    by = c(\"dest_country_code\" = \"country_code\")) %>%\n  rename(dest_continent = continent, dest_country_name = country_name) %>%\n  # add continent to \"unknown countries\" bins\n  mutate(\n    origin_country_name = if_else(\n      str_detect(origin_country_name, \"unknown countries\"),\n      paste0(origin_continent, \": unknown countries\"),\n      origin_country_name),\n    # a few us territories aren't on the origin map, so let's fill them in again\n    # for the destination list\n    dest_country_name = coalesce(dest_country_name,\n      countrycode(dest_country_code, \"iso3c\", \"country.name\"))) %>%\n  select(starts_with(\"origin\"), starts_with(\"dest\"), year, value, magnitude, qualifier) %>%\n  write_csv(here(\"data\", \"student-flows-tidy.csv\")) ->\nnational_data_joined\n\n\nWarning in countrycode_convert(sourcevar = sourcevar, origin = origin, destination = dest, : Some values were not matched unambiguously: ANT, XDN\n\n\nBefore we start visualising, let’s now break this back into data by origin and by destination. That way, we can lump all the same values together and make a more compact statement about the main comings and goings for a given country.\n\n\nCode\n# most popular destinations for each origin\nnational_data_joined %>%\n  filter(!is.na(value), value > 0) %>%\n  group_by(year, origin_country_name) %>%\n  mutate(dest_country_lumped =\n    fct_lump_n(f = dest_country_name, n = 10, w = value,\n      other = \"Other countries\")) %>% \n  ungroup() %>% \n  # now add up all the lumped ones\n  select(origin_country_name, dest_country_lumped, year, value, magnitude,\n    qualifier) %>%\n  group_by(year, origin_country_name, dest_country_lumped) %>%\n  summarise(\n    value_lumped = sum(value, na.rm = TRUE),\n    # also format labels for qualifiers\n    cond_includes = if_else(any(magnitude == \"INCLUDES\", na.rm = TRUE), \"a\", \"-\"),\n    cond_included = if_else(any(magnitude == \"INCLUDED\", na.rm = TRUE), \"b\", \"-\"),\n    cond_natest = if_else(any(qualifier == \"NAT_EST\", na.rm = TRUE), \"c\", \"-\"),\n    cond_uisest = if_else(any(qualifier == \"UIS_EST\", na.rm = TRUE), \"d\", \"-\"),\n    cond_all = str_trim(paste(cond_includes, cond_included, cond_natest,\n      cond_uisest, collapse = \",\"))) %>%\n  ungroup() %>%\n  select(year, origin_country_name, dest_country_lumped, value_lumped,\n    cond_all) %>%\n  write_csv(here(\"data\", \"popular-destinations-by-origin.csv\")) ->\npopular_destinations\n\n\n`summarise()` has grouped output by 'year', 'origin_country_name'. You can\noverride using the `.groups` argument.\n\n\nCode\n# most popular origins for each destination\nnational_data_joined %>%\n  filter(!is.na(value), value > 0) %>%\n  group_by(year, dest_country_name) %>%\n  mutate(origin_country_lumped =\n    fct_lump_n(f = origin_country_name, n = 10, w = value,\n      other = \"Other countries\")) %>% \n  ungroup() %>% \n  # now add up all the lumped ones\n  select(dest_country_name, origin_country_lumped, year, value, magnitude, qualifier) %>%\n  group_by(year, dest_country_name, origin_country_lumped) %>%\n  summarise(\n    value_lumped = sum(value, na.rm = TRUE),\n    # also format labels for qualifiers\n    cond_includes = if_else(any(magnitude == \"INCLUDES\", na.rm = TRUE), \"a\", \"-\"),\n    cond_included = if_else(any(magnitude == \"INCLUDED\", na.rm = TRUE), \"b\", \"-\"),\n    cond_natest = if_else(any(qualifier == \"NAT_EST\", na.rm = TRUE), \"c\", \"-\"),\n    cond_uisest = if_else(any(qualifier == \"UIS_EST\", na.rm = TRUE), \"d\", \"-\"),\n    cond_all = str_trim(paste(cond_includes, cond_included, cond_natest,\n      cond_uisest, collapse = \",\"))) %>%\n  ungroup() %>%\n  select(year, dest_country_name, origin_country_lumped, value_lumped,\n    cond_all) %>%\n  write_csv(here(\"data\", \"popular-origins-by-destination.csv\")) ->\npopular_origins\n\n\n`summarise()` has grouped output by 'year', 'dest_country_name'. You can\noverride using the `.groups` argument.\n\n\nCode\n# list of countries\nc(\n  national_data_joined$origin_country_name,\n  national_data_joined$dest_country_name) %>%\n  unique() %>%\n  discard(is.na) %>%\n  tibble(name = .) %>%\n  write_csv(here(\"data\", \"country-list.csv\"))"
  },
  {
    "objectID": "analysis.html#visualisation-single-country-flows",
    "href": "analysis.html#visualisation-single-country-flows",
    "title": "Global education",
    "section": "Visualisation: single country flows",
    "text": "Visualisation: single country flows\nLet’s start by looking at who comes from and to any given country.\n\n\nCode\nimport { viewof basisSelect, viewof yearSelect, popOriginPlot,\n  popDestinationPlot } from \"./embed-bycountry.qmd\"\n\nviewof basisSelect;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nviewof yearSelect;\n\n\n\n\n\n\n\n\n\nCode\npopOriginPlot;\n\n\n\n\n\n\n\n\n\nCode\npopDestinationPlot;"
  },
  {
    "objectID": "analysis.html#net-flow-indicators",
    "href": "analysis.html#net-flow-indicators",
    "title": "Global education",
    "section": "Net flow indicators",
    "text": "Net flow indicators\nAlso of interest are these two indicators:\n\nMENF.5T8: “Net flow of internationally mobile students (inbound - outbound), both sexes (number)”\nMENFR.5T8: “Net flow ratio of internationally mobile students (inbound - outbound), both sexes (%)”\n\nLet’s see whether countries that have a net flow one way or the other tend to rank highly or lowly on the Human Development Index.\nFirst we need to grab those two indicators and tidy them up:\n\n\nCode\nnational_data %>%\n  filter(INDICATOR_ID %in% c(\"MENF.5T8\", \"MENFR.5T8\")) %>%\n  left_join(indicator_origin_map, by = c(\"COUNTRY_ID\" = \"country_code\")) %>%\n  mutate(indicator = recode(INDICATOR_ID.x,\n    \"MENF.5T8\" = \"flow_value\",\n    \"MENFR.5T8\" = \"flow_ratio\")) %>%\n  pivot_wider(names_from = indicator, values_from = VALUE) %>% \n  select(year = YEAR, continent, country_code = COUNTRY_ID, country_name,\n    flow_value, flow_ratio, magnitude = MAGNITUDE, qualifier = QUALIFIER) ->\nnetflows\n\n\nLet’s also bring Human Development Index data in to compare against. Our World in Data has the tidiest version of this:\n\n\nCode\n# from https://hdr.undp.org/en/indicators/137506\n# via https://ourworldindata.org/human-development-index\n# but not iso3c codes!\nread_csv(here(\"data\", \"hdi-owid.csv\")) %>%\n  set_names(c(\"country_name\", \"country_code\", \"year\", \"hdi\")) ->\nhdi\n\n\nRows: 5001 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Entity, Code\ndbl (2): Year, Human Development Index (UNDP)\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# join the net flow data with owid hdi data\nnetflows %>%\n  left_join(hdi, by = c(\"country_code\", \"year\"), suffix = c(\".uis\", \".owid\")) %>%\n  mutate(country_name = coalesce(country_name.uis, country_name.owid)) %>%\n  select(year, continent, country_code, country_name, flow_value, flow_ratio,\n  hdi) ->\nnetflows_hdi\n\n\n\n\nCode\nnetflows_hdi %>%\n  filter(!is.na(flow_ratio), !is.na(hdi)) %>%\n  mutate(flow_sign = if_else(flow_ratio >= 0,\n    \"Net gain of students\",\n    \"Net loss of students\")) %>%\n  {\n    ggplot(.) +\n      aes(x = hdi, y = flow_ratio, colour = flow_sign) +\n      geom_hline(yintercept = 0) +\n      geom_point() +\n      scale_colour_manual(values = unname(colours_360(\"blues\"))) +\n      facet_wrap(vars(year)) +\n      ylim(c(-100, 100)) +\n      theme_minimal() +\n      theme(\n        legend.position = \"top\",\n        legend.direction = \"horizontal\") +\n      labs(\n        x = \"Human development index\",\n        y = \"Net student flow (%)\",\n        colour = \"Net flow\")\n  }\n\n\nWarning: Removed 25 rows containing missing values (geom_point).\n\n\n\n\n\nCode\nnetflows_hdi %>%\n  # filter out missing data for ojs transpose()\n  filter(!is.na(flow_ratio), !is.na(hdi)) %>%\n  select(year, country_name, flow_ratio, hdi) %>%\n  write_csv(here(\"data\", \"netflows.csv\")) %>%\n  ojs_define(netflows = .)\n\n\nSo here’s what our net flows look like interactively (hover for a second to see country info):\n\n\nCode\nimport {viewof flowYearSelect, netflowScatterChart} from\n  \"./embed-netflow-scatter.qmd\"\n\nviewof flowYearSelect;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nnetflowScatterChart;\n\n\n\n\n\n\n\n\n\nIt seems that a subset of high-HDI countries (not all) are the ones that tend to receive students."
  },
  {
    "objectID": "analysis.html#net-flow-map",
    "href": "analysis.html#net-flow-map",
    "title": "Global education",
    "section": "Net flow map",
    "text": "Net flow map\nThese indicators tell us the net flow in or out of any given country, but I’d really like to know the net flow across any pair of countries. Let’s return to the country-to-country data, national_data_joined, and try to work that out.\nFirst, let’s get the spatial data (country centroids) needed to make a map. I first used {rnaturalearth} for this, but I found CoordinateCleaner (which uses the CIA Fact Book) to be considerably more complete:\n\n\nCode\ndata(countryref)\ncountryref %>%\n  filter(is.na(source)) %>%\n  select(country_code = iso3, centroid.lat, centroid.lon) %>%\n  st_as_sf(coords = c(\"centroid.lat\", \"centroid.lon\")) %>%\n  distinct(country_code, .keep_all = TRUE) ->\nboundaries\n\n\nLet’s check against all the countries in our data to ensure we’re not missing any centroids. ::: {.cell}\n\nCode\nbind_rows(\n  national_data_joined %>%\n    select(starts_with(\"origin_\")) %>%\n    rename_with(~ str_replace(.x, \"origin_\", \"\")),\n  national_data_joined %>%\n    select(starts_with(\"dest_\")) %>%\n    rename_with(~ str_replace(.x, \"dest_\", \"\"))) %>%\n  distinct() %>%\n  select(country_code, country_name, continent) %>%\n  filter(!is.na(country_code)) ->\ncountry_list\n\n:::\nLooks like we’re missing just one: pre-secession Sudan (XDN). ::: {.cell}\n\nCode\nsetdiff(country_list$country_code, boundaries$country_code) %>%\n  { filter(country_list, country_code %in% .) } %>%\n  print(n = Inf)\n\n\n# A tibble: 1 × 3\n  country_code country_name          continent\n  <chr>        <chr>                 <chr>    \n1 XDN          Sudan (pre-secession) Africa   \n\n:::\nI’ll add it manually (we don’t need the centroids to be too precise). I’ve also dropped a “null” point from this dataset labelled NUL:\n\n\nCode\nboundaries %>%\n  bind_rows(tibble(\n    country_code = \"XDN\",\n    geometry = st_sfc(st_point(c(12.76555, 29.91269))))) %>%\n  filter(country_code != \"NUL\") ->\ncountry_centroids\n\n\n\nAside: country-pair net flows\nI’d been hoping to simplify any network visualisation of student flows by only showing the net flow between any two countries.\nUnfortunately, the data isn’t quite good enough for this. The below code pivots the network of student flows to try and calculate net flow, but there’s enough data missing that you’re losing a large part of it by requiring both sides (in other words, if either country’s departing flow is NA, so is the net flow).\nNevertheless, the code is below for reproduction purposes!\n\n\nCode\nnational_data_joined %>%\n  select(year, origin = origin_country_code, dest = dest_country_code,\n    value, magnitude, qualifier) %>%\n  filter(!is.na(origin), !is.na(dest)) %>%\n  # now create a two-country key and direction for the pivot\n  mutate(\n    direction = if_else(origin < dest, \"toB\", \"toA\"),\n    pairkey = paste(pmin(origin, dest), pmax(origin, dest), sep = \"_\")) %>%\n  pivot_wider(\n    id_cols = c(pairkey, year), names_from = direction,\n    values_from = c(value, magnitude, qualifier)) %>%\n  separate(pairkey, into = c(\"countryA\", \"countryB\")) %>%\n  # ditch the extra country columns\n  select(year, countryA, countryB,\n    starts_with(\"value\"),\n    starts_with(\"magnitude\"),\n    starts_with(\"qualifier\")) %>%\n  # calculate net flow\n  mutate(\n    netflow = abs(value_toB - value_toA),\n    net_destination = if_else(\n      value_toB > value_toA,\n      countryB,\n      countryA)) %>%\n  write_csv(here(\"data\", \"tidy-countrypair-netflows.csv\")) ->\ncountrypair_netflows\n\n\n\n\nFlow maps\nLet’s return to showing all the student flows. This will be messy, but some judicious use of opacity might make things clearer.\n\n\nCode\n# bring the country centroid and hdi info in and create lines between countries\n\n# (this is a bit colvoluted but was the only performant solution i could find to\n# creating two-point linestrings)\n\n# (also note that {CoordinateCleaner}'s points appear to be Y/X rather than X/Y.\n# this code is a little weird to read as a result)\nnational_data_joined %>%\n  left_join(country_centroids,\n    by = c(\"origin_country_code\" = \"country_code\")) %>%\n  left_join(select(hdi, -country_name),\n    by = c(\"year\", \"origin_country_code\" = \"country_code\")) %>%\n  rename(origin_pt = geometry, origin_hdi = hdi) %>%\n  left_join(country_centroids,\n    by = c(\"dest_country_code\" = \"country_code\")) %>%\n  left_join(select(hdi, -country_name),\n    by = c(\"year\", \"dest_country_code\" = \"country_code\")) %>%\n  rename(dest_pt = geometry, dest_hdi = hdi) %>%\n  # extract pt coordinates out to cols\n  filter(!st_is_empty(origin_pt), !st_is_empty(dest_pt)) %>%\n  mutate(\n    origin_coord = st_coordinates(origin_pt),\n    dest_coord = st_coordinates(dest_pt),\n    # (note flipping X and Y because {CoordinateCleaner}'s points are around the\n    # wrong way)\n    origin_lat = origin_coord[, \"X\"],\n    origin_lon = origin_coord[, \"Y\"],\n    dest_lat = dest_coord[, \"X\"],\n    dest_lon = dest_coord[, \"Y\"]) %>%\n  mutate(\n    path = pmap(\n      select(., origin_lon, origin_lat, dest_lon, dest_lat),\n      ~ st_linestring(matrix(c(..1, ..2, ..3, ..4), ncol = 2, byrow = TRUE))),\n    path = st_sfc(path)) ->\nflows_all_df\n\nflows_all_df %>%\n  select(-ends_with(\"pt\"), -ends_with(\"coord\"), -path) %>%\n  write_csv(here(\"data\", \"flows-all.csv\")) %>% \n  select(-ends_with(\"continent\"), -ends_with(\"country_name\"),\n    -ends_with(\"country_code\")) %>%\n  write_csv(here(\"data\", \"flows-all-lean.csv\"))\n  \nflows_all_df %>%\n  select(-ends_with(\"lon\"), -ends_with(\"lat\"), -ends_with(\"coord\")) %>%\n  st_as_sf(crs = st_crs(4326), sf_column_name = \"path\") ->\nflows_all\n\n# write out to disk\nst_write(flows_all, here(\"data\", \"flows_all.gpkg\"), delete_dsn = TRUE)\n\n\nWarning in clean_columns(as.data.frame(obj), factorsAsCharacter): Dropping\ncolumn(s) origin_pt,dest_pt of class(es) sfc_POINT;sfc,sfc_POINT;sfc\n\n\nDeleting source `/Users/jgol0005/Code/report-global-education/data/flows_all.gpkg' using driver `GPKG'\nWriting layer `flows_all' to data source \n  `/Users/jgol0005/Code/report-global-education/data/flows_all.gpkg' using driver `GPKG'\nWriting 408896 features with 12 fields and geometry type Line String."
  },
  {
    "objectID": "analysis.html#grouped-country-flows",
    "href": "analysis.html#grouped-country-flows",
    "title": "Global education",
    "section": "Grouped country flows",
    "text": "Grouped country flows\nLet’s group our countries by HDI and work out the flows between those groups each year\n\n\nCode\nflows_all %>%\n  filter(!is.na(origin_hdi), !is.na(dest_hdi)) %>%\n  # bin the hdis\n  mutate(\n    origin_hdi_bin = cut(origin_hdi, c(0, 0.7, 0.85, 1),\n      labels = c(\"Low\", \"Medium\",\n        \"High\")),\n    dest_hdi_bin = cut(dest_hdi, c(0, 0.7, 0.85, 1),\n      labels = c(\"Low\", \"Medium\",\n        \"High\"))) ->\nflows_binned\n\nflows_binned %>%\n  st_drop_geometry() %>%\n  select(year, origin_hdi_bin, dest_hdi_bin, value) %>%\n  group_by(year, origin_hdi_bin, dest_hdi_bin) %>%\n  summarise(students = sum(value, na.rm = TRUE)) %>%\n  write_csv(here(\"data\", \"netflows-hdigroups.csv\")) ->\nflows_hdigroups\n\n\n`summarise()` has grouped output by 'year', 'origin_hdi_bin'. You can override\nusing the `.groups` argument.\n\n\n\n\nCode\nflows_hdigroups %>%\n  mutate(lab = scales::label_number_si(accuracy = 0.1)(students)) %>%\n  {\n    ggplot(.) +\n      aes(y = origin_hdi_bin, x = dest_hdi_bin) +\n      geom_tile(aes(fill = students)) +\n      geom_text(aes(label = lab),\n        colour = alpha(\"white\", 0.25)) +\n      facet_wrap(vars(year)) +\n      theme_minimal(base_size = 16) +\n      labs(\n        x = \"Destination countries\",\n        y = \"Origin countries\")\n  }"
  }
]